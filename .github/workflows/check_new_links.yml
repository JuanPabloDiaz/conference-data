name: Check links from PRs

on:
    pull_request:
        branches:
            - test # Change this to the branch to main later
    schedule:
        - cron: '30 12 * * 1-5'

jobs:
    validate:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            issues: write
            pull-requests: write
        env:
            issue-lookup-label: automated-link-issue
            issue-content: ./lychee-out.md
        steps:
            - uses: actions/checkout@v4

            - name: Get Changed Files
              id: changed-files
              run: |
                  echo "::set-output name=files::$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.json$')"

            - name: Check for Changed Conference Files
              if: steps.changed-files.outputs.files
              run: echo "Changed conference files: ${{ steps.changed-files.outputs.files }}"

            - name: Restore lychee cache
              uses: actions/cache@v4
              with:
                  path: .lycheecache
                  key: cache-lychee-${{ github.sha }}
                  restore-keys: cache-lychee-

            - name: Link Checker
              if: steps.changed-files.outputs.files
              id: lychee
              uses: lycheeverse/lychee-action@v1.10.0
              with:
                  fail: true
                  args: --verbose --no-progress ${{ steps.changed-files.outputs.files }} --exclude-mail
                  output: ${{ env.issue-content }}

            - name: 'Look for an existing issue'
              if: ${{ failure() }}
              id: last-issue
              uses: micalevisk/last-issue-action@v2
              with:
                  state: open
                  labels: ${{ env.issue-lookup-label }}

            - name: 'Create a new issue, or update an existing one'
              if: ${{ failure() }}
              uses: peter-evans/create-issue-from-file@v4
              with:
                  title: 'docs: Broken links found'
                  content-filepath: ${{ env.issue-content }}
                  issue-number: ${{ steps['last-issue']['outputs']['issue-number'] }}
                  labels: |
                      ${{ env.issue-lookup-label }}
                      broken-link, docs

            - name: 'Create PR to remove broken links'
              if: ${{ failure() }}
              run: |
                  git config --global user.name 'github-actions[bot]'
                  git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
                  git checkout -b fix-broken-links-${{ github.sha }}
                  for file in ${{ steps.changed-files.outputs.files }}; do
                    sed -i '/http.*404/d' "$file"
                  done
                  git commit -am 'Remove broken conference links'
                  git push origin fix-broken-links-${{ github.sha }}

            - name: Create Pull Request
              if: ${{ failure() }}
              uses: peter-evans/create-pull-request@v4
              with:
                  commit-message: 'Remove broken conference links'
                  branch: fix-broken-links-${{ github.sha }}
                  title: 'Remove broken conference links'
                  body: 'This PR removes broken conference links found in the upcoming conferences list.'
                  labels: broken-link, docs
